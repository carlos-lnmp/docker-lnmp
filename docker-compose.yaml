version: "3"
services:
  nginx:
    image: nginx
    restart: always
    ports:
      - "8080:80"
      - "443:443"
    depends_on:
      - php56-fpm
      - php73-fpm
      - php74-fpm
    volumes:
      - ${NGINX_CONF}:/etc/nginx/nginx.conf
      - ${NGINX_CONFD}:/etc/nginx/conf.d
      - ${NGINX_SSL}:/etc/letsencrypt
      - ${RESOURCE}:/var/www/html
      - ${NGINX_LOG}:/var/log/nginx
    networks:
      - app_net
    environment:
      TZ: "${TZ}"
    container_name: "nginx"
  php56-fpm:
    # build:
    #   context: ./service/php56  # 使用dockerfile 文件
    image: registry.cn-chengdu.aliyuncs.com/docker-carlos/dlnmp:5.6
    restart: always
    ports:
      - "9000:9000"
    depends_on:
      - mysql
    links:
      - mysql
      - redis
    volumes:
      - ${PHP56_D_INI}:/usr/local/etc/php/conf.d/php.ini
      - ${PHP56_RESOURCE}:/var/www/html/php56
      - ${PHP56_LOG}:/var/log/php
    networks:
      - app_net
    container_name: "php56"
  php73-fpm:
    # build:
    #   context: ./service/php73  # 使用dockerfile 文件
    image: registry.cn-chengdu.aliyuncs.com/docker-carlos/dlnmp:7.3.18
    restart: always
    ports:
      - "9001:9000"
    depends_on:
      - mysql
    links:
      - mysql
      - redis
    volumes:
      - ${PHP73_D_INI}:/usr/local/etc/php/conf.d/php.ini
      - ${PHP73_RESOURCE}:/var/www/html/php73
      - ${PHP73_LOG}:/var/log/php
    networks:
      - app_net
    container_name: "php73"
  php74-fpm:
    # build:
    #   context: ./service/php74  # 使用dockerfile 文件
    image: registry.cn-chengdu.aliyuncs.com/docker-carlos/dlnmp:7.4
    restart: always
    ports:
      - "9002:9000"
    depends_on:
      - mysql
    links:
      - mysql
      - redis
    volumes:
      - ${PHP74_D_INI}:/usr/local/etc/php/conf.d/php.ini
      - ${PHP74_RESOURCE}:/var/www/html/php74
    networks:
      - app_net
    container_name: "php74"
  php80-fpm:
    # build:
    #   context: ./service/php80  # 使用dockerfile 文件
    image: registry.cn-chengdu.aliyuncs.com/docker-carlos/dlnmp:8.0.20
    restart: always
    ports:
      - "9003:9000"
      - "9501-9510:9501-9510"
    depends_on:
      - mysql
      - rabbitmq
    links:
      - mysql
      - redis
      - rabbitmq
    volumes:
      - ${PHP80_D_INI}:/usr/local/etc/php/conf.d/php.ini
      - ${PHP80_RESOURCE}:/var/www/html/php80
    networks:
      - app_net
    container_name: "php80"
  mysql:
    image: mysql:5.7
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3306:3306"
    volumes:
      - ${MYSQL_DATA_DIR}:/var/lib/mysql
      - ${MYSQL_CONF_FILE}:/etc/mysql/my.cnf
      - ${MYSQL_INIT_DIR}:/docker-entrypoint-initdb.d/
    environment:
      MYSQL_ROOT_PASSWORD: root
      TZ: "$TZ"
    networks:
      - app_net
    container_name: "mysql"
  redis:
    image: redis
    restart: always
    command: redis-server --requirepass carlos@20200519
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
    networks:
      - app_net
    container_name: "redis"
  rabbitmq:
    image: rabbitmq:3.8.3-management
    container_name: rabbitmq
    restart: always
    hostname: myRabbitmq
    ports:
      - 15672:15672
      - 5672:5672
    volumes:
      - ./data/rabbitmq:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
    networks:
      - app_net
networks:
  app_net:
    driver: bridge



    